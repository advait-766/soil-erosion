lapply(D$TIMESTAMP[1:10], as.character)
lapply(D$TIMESTAMP[1:10], as.character)data.frame(lapply(bob, as.character), stringsAsFactors=FALSE)
data.frame(lapply(D$TIMESTAMP[1:10], as.character), stringsAsFactors=FALSE)
as.vector(lapply(D$TIMESTAMP[1:10], as.character), stringsAsFactors=FALSE)
as.vector(data.frame(lapply(D$TIMESTAMP[1:10], as.character), stringsAsFactors=FALSE))
lapply(D$TIMESTAMP[1:10], as.character)
sapply(D$TIMESTAMP[1:10], as.character)
D$TIMESTAMP <- sapply(D$TIMESTAMP, as.character)
load("/home/data/00_RData/NUC-data.RData")
D$TIMESTAMP <- sapply(D$TIMESTAMP, as.character)
D$TIMESTAMP.1 <- sapply(D$TIMESTAMP.1, as.character)
View(D)
save.image("/home/data/00_RData/NUC-data.RData")
load("/home/data/00_RData/NUC-data.RData")
dates(D$TIMESTAMP)
dates(D$TIMESTAMP[1])
source('/home/data/06_penetr/nacti_penet.R')
source('/home/data/06_penetr/nacti_penet.R')
source('/home/data/06_penetr/nacti_penet.R')
Penetr$nuc30$profil1$prumer - Penetr$nuc30$profil2$prumer
Penetr$nuc30$profil1$prumer[1:40] - Penetr$nuc30$profil2$prumer[1:40]
Penetr$nuc30$profil1$prumer[1:40] - Penetr$nuc30$profil3$prumer[1:40]
Penetr$nuc30$profil2$prumer[1:40] - Penetr$nuc30$profil3$prumer[1:40]
save.image("/home/data/00_RData/Penetr.RData")
setwd('~\')
setwd('~\')
setwd('~/')
load('/home/data/00_RData/ERT.RData')
ERT$nuc4d$Resistivity
c(ERT$nuc4d$Resistivity)
c(ERT$nuc4d$Depth)
source('/tmp/test.R')
source('/tmp/test.R')
ISub
source('/tmp/test.R')
source('/tmp/test.R')
print(ERT[[i]])
source('/tmp/test.R')
source('/tmp/test.R')
ERT['nuc8']
names(ERT)
source('/tmp/test.R')
source('/tmp/test.R')
source('/tmp/test.R')
source('/tmp/test.R')
source('/tmp/test.R')
ISub
names(ERT)
source('/tmp/test.R')
ERT[[i]][2]
length(ERT[[i]][2])
length(ERT[[i]][[2]])
source('/tmp/test.R')
ISub
source('/tmp/test.R')
ISub
source('/tmp/test.R')
ISub
rm(list=ls())
source('/tmp/test.R')
ERT[[i]][[2]]
ERT[[i]][[3]]
ERT[[i]][[3]][iTop,]
source('/tmp/test.R')
top
source('/tmp/test.R')
source('/tmp/test.R')
source('/tmp/test.R')
dnorm(1:10, mean = mean(1:10), sd = sd(1:10))
plot(dnorm(1:10, mean = mean(1:10), sd = sd(1:10)))
pnorm(1:10, mean = mean(1:10), sd = sd(1:10))
source('/tmp/test.R')
source('/tmp/test.R')
source('/tmp/test.R')
source('/tmp/test.R')
source('/tmp/test.R')
source('/tmp/test.R')
source('/tmp/test.R')
source('/tmp/test.R')
source('/tmp/test.R')
source('/tmp/test.R')
source('/tmp/test.R')
source('/tmp/test.R')
itop
iTop
source('/tmp/test.R')
source('/tmp/test.R')
source('/tmp/test.R')
source('/tmp/test.R')
source('/tmp/test.R')
source('/tmp/test.R')
hist(top)
hist(sub)
hist(sub,breaks = 10)
source('/tmp/test.R')
p  = hist(sub,breaks = 100)
p  = hist(sub,breaks = 100)
p
p$breaks
p = hist(sub,breaks = 100)
p = hist(top,breaks = 100)
p = hist(sub,breaks = 100)
p = hist(top,breaks = seq(0,max(top),by = 10))
p = hist(top,breaks = seq(min(top),max(top),by = 10))
seq(min(top),max(top),by = 10)
max(top)
p = hist(top,breaks = c(seq(min(top),max(top),by = 10),max(top)))
p = hist(top,breaks = c(seq(0,max(top),by = 10),max(top)))
p = hist(top,breaks = c(seq(0,max(top),by = 10),max(top)))
p = hist(sub,breaks = c(seq(0,max(sub),by = 10),max(sub)))
p = hist(top,breaks = c(seq(0,max(top),by = 10),max(top)))
p = hist(sub,breaks = c(seq(0,max(sub),by = 10),max(sub)))
p$counts
p = hist(top,breaks = c(seq(0,max(top),by = 10),max(top)))
p = hist(sub,breaks = c(seq(0,max(sub),by = 10),max(sub)))
p = hist(celk,breaks = c(seq(0,max(celk),by = 10),max(celk)))
p = hist(top,breaks = c(seq(0,max(top),by = 10),max(top)))
p$counts
p = hist(sub,breaks = c(seq(0,max(sub),by = 10),max(sub)))
p$counts
p = hist(top,breaks = c(seq(0,max(top),by = 10),max(top)),freq = TRUE)
source('/tmp/test.R')
source('/tmp/test.R')
source('/tmp/test.R')
yCelk
p = hist(top,breaks = c(seq(0,max(top),by = 10),max(top)),freq = TRUE)
p$density
p$mids
p$xname
p$equidist
p$counts
p$counts[which(max(p$counts))]
p$counts[which(p$counts == max(p$counts))]
which(p$counts == max(p$counts))
p = hist(sub,breaks = c(seq(0,max(sub),by = 10),max(sub)),freq = TRUE)
p$counts[which(p$counts == max(p$counts))]
which(p$counts == max(p$counts))
p = hist(celk,breaks = c(seq(0,max(celk),by = 10),max(celk)),freq = TRUE)
p$counts[which(p$counts == max(p$counts))]
which(p$counts == max(p$counts))
install.packages()
install.packages('raster')
gglop
library('ggplot2')
ggplot(1,2)
df <- data.frame(gp = factor(rep(letters[1:3], each = 10)),
y = rnorm(30))
# Compute sample mean and standard deviation in each group
ds <- plyr::ddply(df, "gp", plyr::summarise, mean = mean(y), sd = sd(y))
# Declare the data frame and common aesthetics.
# The summary data frame ds is used to plot
# larger red points in a second geom_point() layer.
# If the data = argument is not specified, it uses the
# declared data frame from ggplot(); ditto for the aesthetics.
ggplot(df, aes(x = gp, y = y)) +
geom_point() +
geom_point(data = ds, aes(y = mean),
colour = 'red', size = 3)
source('/tmp/ggtest.R')
source('/tmp/ggtest.R')
source('/tmp/ggtest.R')
source('/tmp/ggtest.R')
library(manipulatre)
library(manipulate)
library(ggplot)
source('/tmp/ggtest.R')
source('/tmp/ggtest.R')
source('/tmp/ggtest.R')
ggplot(df, aes(x = gp, y = y)) +  geom_point() + geom_point(data = ds, aes(y = mean), colour = 'red', size = 3) + ylim(0.0,1.0)
source('/tmp/ggtest.R')
source('/tmp/ggtest.R')
source('/tmp/ggtest.R')
source('/tmp/ggtest.R')
source('/tmp/ggtest.R')
source('/tmp/ggtest.R')
source('/tmp/ggtest.R')
source('/tmp/ggtest.R')
df
aes(x = gp, y = y)
source('/tmp/ggtest.R')
load('/home/data/00_RData/Kopecky.RData')
load('/home/data/00_RData/Penetr.RData')
D
plot(1:10000, (10*(1:10000))/(1+10*(1:10000)))
plot(1:10000, (0.001*(1:10000))/(1+0.001*(1:10000)))
plot(1:10000, (0.000001*(1:10000))/(1+0.000001*(1:10000)))
install.packages(topmodel)
install.packages(ยง)
install.packages("topmodel")
data(huagrahuma)
library(topmodel)
data(huagrahuma)
attach(huagrahuma)
Qsim <- topmodel(parameters, topidx, delay, rain, ET0)
Qsim
Qsim <- topmodel(parameters, topidx, delay, rain,ET0, verbose = TRUE)
Qsim <- topmodel(parameters, topidx, delay, rain, ET0)
plot(Qsim)
plot(huagrahuma$rain)
source('~/.active-rstudio-document')
huagrahuma$parameters
huagrahuma$delay
huagrahuma$topidx
attach(huagrahuma.dem)
load(huagrahuma.dem)
load(huagrahuma.dem)
data(huagrahuma.dem)
image(huagrahuma.dem)
require(geoR)
plot(s100)
plot(s100, scatter3d=TRUE)
plot(s100, qt.col=1)
plot(ca20, bor=borders)          # original data
plot(ca20, trend=~altitude+area) # residuals from an external trend
plot(ca20, trend=
'
1st
'
)          # residuals from a polynomial trend
plot(sic.100, bor=sic.borders)           # original data
plot(sic.100, bor=sic.borders, lambda=0) # logarithm of the data
require(geoR)
plot(s100)
plot(s100, scatter3d=TRUE)
plot(s100, qt.col=1)
plot(ca20, bor=borders)          # original data
plot(ca20, trend=~altitude+area) # residuals from an external trend
plot(ca20, trend=
'
1st
'
)          # residuals from a polynomial trend
plot(sic.100, bor=sic.borders)           # original data
plot(sic.100, bor=sic.borders, lambda=0) # logarithm of the data
require(geoR)
plot(s100)
plot(s100, scatter3d=TRUE)
plot(s100, qt.col=1)
plot(ca20, bor=borders)          # original data
plot(ca20, trend=~altitude+area) # residuals from an external trend
plot(ca20, trend=
'
1st
'
)          # residuals from a polynomial trend
plot(sic.100, bor=sic.borders)           # original data
plot(sic.100, bor=sic.borders, lambda=0) # logarithm of the data
parameters
source('~/Pokus/R/log-sigmoid.R')
t  = -10:10
t
ls <- function(t){
return(1/(1+exp(-0.1*(t))))
}
ls(t)
plot(ls(t))
plot(t,ls(t))
ls <- function(t){
return(1/(1+exp(-t))))
return(1/(1+exp(-t)))
plot(t,ls(t))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
+.+
load("/home/data/00_RData/NUC-data.RData")
head(D)
union(D$File.id)
load("/home/data/00_RData/NUC-data-factors.RData")
load("/home/data/00_RData/NUC-data.RData")
D$File.id
head(D)
range(D$BattV)
range(D$BattV, na.rm = TRUE)
range(D$DTemp, na.rm = TRUE)
range(D$NR, na.rm = TRUE)
range(D$NR_Wm2, na.rm = TRUE)
range(D$Rain_mm_Tot, na.rm = TRUE)
D$Rain_mm_Tot
range(D$Rain_mm_Tot, na.rm = TRUE)
head(D)
range(D$Rain24, na.rm = TRUE)
range(D$NaN., na.rm = TRUE)
range(D$NaN..1, na.rm = TRUE)
range(D$LMP_V, na.rm = TRUE)
range(D$LMP_h, na.rm = TRUE)
range(D$Q, na.rm = TRUE)
range(D$Turb, na.rm = TRUE)
range(D$ISCO, na.rm = TRUE)
for (i in 1:29){}
for (i in 1:29){
print (names(D)[i],range(D[,i],na.rm = TRUE))
}
names(D)[1]
names(D)[2]
for (i in 1:29){
print (names(D)[i])
}
for (i in 1:29){
print (range(D[,i],na.rm = TRUE))
}
for (i in 3:29){
print (names(D)[i], range(D[,i],na.rm = TRUE))
}
D[,1]
for (i in 3:29){
print (range(D[,i],na.rm = TRUE))
}
for (i in 3:29){
print (paste(range(D[,i],na.rm = TRUE)))
}
print (paste(names(D)[i],range(D[,i],na.rm = TRUE)))
for (i in 3:29){
print (paste(names(D)[i],range(D[,i],na.rm = TRUE)))
}
print (paste(names(D)[i],c(range(D[,i],na.rm = TRUE))))
print (c(names(D)[i],range(D[,i],na.rm = TRUE)))
for (i in 3:29){
print (c(names(D)[i],range(D[,i],na.rm = TRUE)))
}
install.packages('fields')
library("fields", lib.loc="/usr/local/lib/R/site-library")
example("colorbar.plot")
colorbar.plot( 6, 45, y, adj.y=1,col=c("red", "green"))
colorbar.plot( 6, 45, y, adj.y=1,col=c("red", "green"))
colorbar.plot( 6, 45, y, adj.y=1,col=c("red", "green"))
colorbar.plot( 6, 45, y, adj.y=1,col=c("red", "green"))
example("colorbar.plot")
colorbar.plot( 6, 45, y, adj.y=1,col=c("red", "green"))
example("colorbar.plot")
colorbar.plot( 6, 45, y, adj.y=1,col=c("red", "green"))
plot(1,2)
colorbar.plot( 6, 45, y, adj.y=1,col=c("red", "green"))
y
x <- mtcars["Honda Civic",]
y <- mtcars["Camaro Z28",]
dist(rbind(x, y))
y
z
x
z <- mtcars["Pontiac Firebird",]
dist(rbind(y, z))
dist(as.matrix(mtcars))
x = seq(0,1,by=0.1)
z = seq(-1,0,by=0.2)
x = seq(0,1,by=0.2)
x = seq(0,1,by=0.1)
z = seq(-1,0,by=0.1)
n = 10
m = 10
x = seq(0,1,by=n)
z = seq(-1,0,by=m)
x = seq(0,1,length=n)
z = seq(-1,0,length=m)
z = x%*%z
z = z%*%x
z = x%*%z
source('~/.active-rstudio-document')
n = 10
m = 10
xc = seq(0,1,length=n)
zc = seq(-1,0,length=m)
z = xc%*%zc
z = zc%*%xc
xc = seq(0,1,length=n)
zc = seq(-1,0,length=m)
z = zc%*%xc
z = t(xc)%*%t(zc)
z = matrix(rep(z,m),ncol = n)
View(z)
z = x%*%zrep(z,m)
rep(z,m)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
z
z = matrix(rep(zc,m),ncol = n,byrow = TRUE)
z
z = matrix(rep(zc,m),ncol = n)
z
z = matrix(rep(rev(zc),m),ncol = n)
z
contour(z)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
z
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
h = matrix(rep(zc,m),ncol = n)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
H
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
H
load("/home/data/00_RData/Danes.tablo.RData")
write.csv(x = Danes.tablo, file = "Danes_tablo.csv")
write.csv(x = Danes.tablo, file = "Danes_tablo.csv",row.names = FALSE)
curve(expr = exp((x-31)/10),from = 0, to = 10)
curve(expr = exp((x-31)/10),from = 0, to = 80)
exp((2-31)/10)
exp((40-31)/10)
exp((60-31)/10)
10.034*log(6)+31.205
exp((40-31.205)/10.024)
exp((50-31.205)/10.024)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
h = -10:-1
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
h <- function(th){
return((((1/th)**(1/m)-1)**1/n)/a)
}
th = seq(0,1,length=100)
plot(h(th),th)
th <- function(h){
return (1/(1+(a*abs(h))**n)**m)
}
h = seq(0,800,length=100)
plot(h,th(h))
h <- function(th){
return((((1/th)**(1/m)-1)**1/n)/a)
}
th = seq(0,1,length=100)
h(0.5)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
rm(list=ls())
source('~/.active-rstudio-document')
th(50)
source('~/.active-rstudio-document')
thf(50)
thf(200)
hf(200)
hf(0.5)
source('~/.active-rstudio-document')
K(S)
K(1)
K(0.5)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
plot(th,K(th))
library(maptools)
library(maptools)
library(raster)
alt <- getData(โaltโ, country=โPHLโ)
adm <- getData(โGADMโ, country=โPHLโ, leve=1)
mar<-(adm[adm$NAME_1==โMarinduqueโ,])
maralt<-crop(alt,mar)
persp(maralt, exp=0.2,phi=35, xlab=โLongitudeโ, ylab=โLatitudeโ, zlab=โElevationโ)
alt <- getData('alt', country='PHL')
adm <- getData('GADM', country='PHL', leve=1)
mar<-(adm[adm$NAME_1=='Marinduque',])
maralt<-crop(alt,mar)
persp(maralt, exp=0.2,phi=35, xlab="Longitude", ylab="Latitude', zlab="Elevation")
persp(maralt, exp=0.2,phi=35, xlab="Longitude", ylab="Latitude", zlab="Elevation")
persp(maralt, exp=0.2,phi=35, xlab="Longitude", ylab="Latitude", zlab="Elevation",, shade=0.45, col="green4")
persp(maralt, exp=0.2,phi=35, xlab="Longitude", ylab="Latitude", zlab="Elevation",, shade=0.45, col="green4")
persp(maralt, exp=0.2,phi=35, xlab="Longitude", ylab="Latitude", zlab="Elevation", shade=0.45, col="green4")
persp(maralt, exp=0.2,phi=45, xlab="Longitude", ylab="Latitude", zlab="Elevation", shade=0.45, col="green4")
persp(maralt, exp=0.5,phi=45, xlab="Longitude", ylab="Latitude", zlab="Elevation", shade=0.45, col="green4")
persp(maralt, exp=0.5,phi=20, xlab="Longitude", ylab="Latitude", zlab="Elevation", shade=0.45, col="green4")
setwd("~/Documents/Smoderp/curr/rscripty")
max(1,2,3,4,5,3,,,1,)
max(1,2,3,4,5,3,1)
source('~/Documents/Smoderp/curr/rscripty/rill_kontrola.R')
source('~/Documents/Smoderp/curr/rscripty/rill_kontrola.R')
source('~/Documents/Smoderp/curr/rscripty/rill_kontrola.R')
source('~/Documents/Smoderp/curr/rscripty/rill_kontrola.R')
source('~/Documents/Smoderp/curr/rscripty/rill_kontrola.R')
source('~/Documents/Smoderp/curr/rscripty/rill_kontrola.R')
source('~/Documents/Smoderp/curr/rscripty/rill_kontrola.R')
source('~/Documents/Smoderp/curr/rscripty/rill_kontrola.R')
