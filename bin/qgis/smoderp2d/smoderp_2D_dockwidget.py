# -*- coding: utf-8 -*-
"""
/***************************************************************************
 Smoderp2DDockWidget
                                 A QGIS plugin
 This plugin computes hydrological erosion model.
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2018-10-10
        git sha              : $Format:%H$
        copyright            : (C) 2018 by CTU
        email                : petr.kavka@fsv.cvut.cz
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from PyQt5 import QtGui, QtWidgets, uic
from PyQt5.QtCore import pyqtSignal

from smoderp2d.smoderp2d.smoderp2d.exceptions import ProviderError

from smoderp2d.connect_grass import findGrass as fg

FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'smoderp_2D_dockwidget_base.ui'))


class Smoderp2DDockWidget(QtWidgets.QDockWidget, FORM_CLASS):

    closingPlugin = pyqtSignal()

    def __init__(self, parent=None):
        """Constructor."""
        super(Smoderp2DDockWidget, self).__init__(parent)
        # Set up the user interface from Designer.
        # After setupUI you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)

        self.run_dataprep.clicked.connect(self.onRun_button)

    def closeEvent(self, event):
        self.closingPlugin.emit()
        event.accept()

    def onRun_button(self):

        # Get grass
        grass7bin = fg()

        # Get input parameters
        self._get_input_params()

        try:
            runner = smoderp2d.QGISRunner()
        except ProviderError as e:
            pass

    def _get_input_params(self):
        """Get input parameters from QGIS plugin."""

        self._input_params = {
            'elevation': self.elevation_lineEdit.text(),
            'soil': self.soil_lineEdit.text(),
            'soil_type': self.soil_type_comboBox.currentText(),
            'vegetation': self.vegetation_lineEdit.text(),
            'vegetation_type': self.vegetation_type_comboBox.currentText(),
            'points': self.points_lineEdit.text(),
            'output': self.output_lineEdit.text(),
            'stream': self.stream_lineEdit.text(),
            'pickle': self.pickle_lineEdit.text(),
            'rainfall_file': self.rainfall_file_lineEdit.text(),
            'end_time': float(self.end_time_lineEdit.text()) * 60.0, # prevod na s
            'maxdt': float(self.maxdt_lineEdit.text()),
            'table_soil_vegetation': self.table_soil_vegetation_lineEdit.text(),
            'table_soil_vegetation_code': self.table_soil_vegetation_code_comboBox.currentText(),
            'table_stream_shape': self.table_stream_shape_lineEdit.text(),
            'table_stream_shape_code': self.table_stream_shape_code_comboBox.currentText(),
            'main_output': self.main_output_lineEdit.text()
        }
